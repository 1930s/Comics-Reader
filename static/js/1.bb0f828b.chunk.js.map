{"version":3,"sources":["webpack:///./src/js/components/ExtendedPhotoSwipeGallery.js","webpack:///./src/js/components/Book.js","webpack:///./src/js/containers/BookManager.js"],"names":["ExtendedPhotoSwipeGallery_ExtendedPhotoSwipeGallery","ExtendedPhotoSwipeGallery","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showPhotoSwipe","itemIndex","e","preventDefault","options","state","index","getThumbBoundsFn","img","thumbnails","pageYScroll","window","pageYOffset","document","documentElement","scrollTop","rect","getBoundingClientRect","x","left","y","top","w","width","setState","isOpen","handleResize","debounce_default","resizeGallery","Math","floor","_gallery","clientWidth","loadImages","handleClose","onClose","handleScroll","containerWidth","addEventListener","removeEventListener","filter","thumb","src","innerHeight","clientHeight","forEach","getAttribute","rowLimit","getRowLimit","contWidth","lastRowIndex","remainder","items","length","previousHeight","i","totalAr","commonHeight","j","aspectRatio","min","k","height","_this2","_this$state","react_default","a","createElement","className","ref","c","map","item","key","onClick","assign","data-src","thumbnail","data-key","alt","concat","onLoad","node","getThumbSize","h","Portal","PhotoSwipe_default","afterChange","Component","defaultProps","displayName","Book_Book","currentPage","instance","indexOf","currItem","count","pages","read","onRead","page","utils","history","shareEl","BookManager_BookManager","handleRead","dispatch","reducers_read","path","reducers_pages","route","book","name","location","pathname","parent","nextProps","unmounting","Loading","__webpack_exports__","es","ownProps","replace","_selectBook","books"],"mappings":"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","file":"1.bb0f828b.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport debounce from \"debounce\";\nimport Portal from \"react-portal/es/Portal\";\nimport PhotoSwipe from \"react-photoswipe/lib/PhotoSwipe\";\nimport \"react-photoswipe/lib/photoswipe.css\";\n\nfunction getRowLimit(containerWidth) {\n  if (containerWidth >= 1024) {\n    return 9;\n  }\n\n  if (containerWidth >= 480) {\n    return 6;\n  }\n\n  return 3;\n}\n\nfunction elementInViewport(el) {\n  const rect = el.getBoundingClientRect();\n\n  return (\n    rect.top >= 0 &&\n    rect.left >= 0 &&\n    rect.top <= (window.innerHeight || document.documentElement.clientHeight)\n  );\n}\n\nexport default class ExtendedPhotoSwipeGallery extends React.Component {\n  static propTypes = {\n    items: PropTypes.array.isRequired,\n    options: PropTypes.object,\n    onClose: PropTypes.func,\n    afterChange: PropTypes.func\n  };\n\n  static defaultProps = {\n    options: {},\n    onClose: () => {},\n    afterChange: () => {}\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: false,\n      options: this.props.options,\n      containerWidth: 0\n    };\n\n    this.thumbnails = [];\n  }\n\n  showPhotoSwipe = itemIndex => e => {\n    e.preventDefault();\n    const getThumbBoundsFn = index => {\n      const img = this.thumbnails[index];\n      const pageYScroll =\n        window.pageYOffset || document.documentElement.scrollTop;\n      const rect = img.getBoundingClientRect();\n      return {\n        x: rect.left,\n        y: rect.top + pageYScroll,\n        w: rect.width\n      };\n    };\n    const { options } = this.state;\n    options.index = itemIndex;\n    options.getThumbBoundsFn = options.getThumbBoundsFn || getThumbBoundsFn;\n    this.setState({\n      isOpen: true,\n      options\n    });\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.handleResize);\n    window.addEventListener(\"scroll\", this.handleScroll);\n    this.handleResize();\n    this.handleScroll();\n  }\n\n  componentDidUpdate() {\n    if (this._gallery.clientWidth !== this.state.containerWidth) {\n      this.handleResize();\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleResize, false);\n    window.removeEventListener(\"scroll\", this.handleScroll, false);\n  }\n\n  loadImages() {\n    this.thumbnails\n      .filter(thumb => !thumb.src && elementInViewport(thumb))\n      .forEach(thumb => {\n        thumb.src = thumb.getAttribute(\"data-src\");\n      });\n  }\n\n  handleResize = debounce(() => {\n    this.resizeGallery(Math.floor(this._gallery.clientWidth));\n    this.loadImages();\n  }, 10);\n\n  handleClose = () => {\n    this.setState({ isOpen: false });\n    this.props.onClose();\n  };\n\n  handleScroll = debounce(() => this.loadImages(), 10);\n\n  // eslint-disable-next-line @swissquote/swissquote/sonarjs/cognitive-complexity\n  resizeGallery(containerWidth) {\n    const photoPreviewNodes = [];\n    const rowLimit = getRowLimit(containerWidth);\n\n    let contWidth = containerWidth - rowLimit * 6;\n    /* 4px for margin around each image*/\n    contWidth = Math.floor(contWidth - 2); // add some padding to prevent layout prob\n    const remainder = this.props.items.length % rowLimit;\n    let lastRowIndex;\n    if (remainder) {\n      // there are fewer than rowLimit photos in last row\n      lastRowIndex = this.props.items.length - remainder;\n    }\n\n    let previousHeight = 0;\n    for (let i = 0; i < this.props.items.length; i += rowLimit) {\n      // loop thru each set of rowLimit num\n      // eg. if rowLimit is 3 it will  loop thru 0,1,2, then 3,4,5 to perform calculations for the particular set\n      let totalAr = 0,\n        commonHeight = 0;\n      for (let j = i; j < i + rowLimit; j++) {\n        if (j === this.props.items.length) {\n          break;\n        }\n        totalAr += this.props.items[j].aspectRatio;\n      }\n      if (i === lastRowIndex) {\n        commonHeight = previousHeight || Math.min(200, contWidth / totalAr);\n      } else {\n        commonHeight = contWidth / totalAr;\n      }\n\n      // run thru the same set of items again to give the common height\n      for (let k = i; k < i + rowLimit; k++) {\n        if (k === this.props.items.length) {\n          break;\n        }\n\n        this.thumbnails[k].height = commonHeight;\n        this.thumbnails[k].width =\n          commonHeight * this.props.items[k].aspectRatio;\n      }\n      previousHeight = commonHeight;\n    }\n\n    return photoPreviewNodes;\n  }\n\n  getThumbSize(height, width) {\n    const finalWidth = 200;\n    return {\n      width: finalWidth,\n      height: height * (finalWidth / width)\n    };\n  }\n\n  render() {\n    const { items } = this.props;\n    const { isOpen, options } = this.state;\n    return (\n      <div className=\"pswp-gallery\">\n        <div\n          className=\"Gallery\"\n          ref={c => {\n            this._gallery = c;\n          }}\n        >\n          {this.props.items.map((item, k) => (\n            <div\n              key={k}\n              className=\"Gallery__item\"\n              onClick={this.showPhotoSwipe(k)}\n            >\n              <img\n                data-src={item.thumbnail}\n                data-key={k}\n                alt={`Page ${k}`}\n                onLoad={this.handleResize}\n                ref={node => {\n                  if (node) {\n                    this.thumbnails[node.getAttribute(\"data-key\")] = node;\n                  }\n                }}\n                {...this.getThumbSize(item.h, item.w)}\n              />\n              <span className=\"Gallery__page\">{k + 1}</span>\n            </div>\n          ))}\n        </div>\n        <Portal>\n          <PhotoSwipe /*{...eventProps}*/\n            isOpen={isOpen}\n            items={items}\n            options={options}\n            onClose={this.handleClose}\n            afterChange={this.props.afterChange}\n          />\n        </Portal>\n      </div>\n    );\n  }\n}\n\nExtendedPhotoSwipeGallery.displayName = \"PhotoSwipe\";\n","import React from \"react\";\n\nimport ExtendedPhotoSwipeGallery from \"./ExtendedPhotoSwipeGallery\";\nimport { image } from \"../utils\";\n\nexport default class Book extends React.Component {\n  currentPage = -1;\n\n  afterChange = instance => {\n    this.currentPage = instance.items.indexOf(instance.currItem);\n  };\n\n  handleClose = () => {\n    const count = this.props.pages.length;\n\n    // Add + 1 for the 0-indexed list\n    // The -3 is to count for the last pages that are generally the\n    // back cover, that is often skipped\n    if (this.currentPage + 1 > count - 3 && !this.props.read) {\n      this.props.onRead();\n    }\n  };\n\n  render() {\n    const items = this.props.pages.map(page => {\n      return {\n        src: image(\"big\", page.src),\n        thumbnail: image(\"small\", page.src),\n        w: page.width,\n        h: page.height,\n        aspectRatio: page.width / page.height\n      };\n    });\n\n    const options = {\n      history: false,\n      shareEl: false\n    };\n\n    return (\n      <div>\n        <div className=\"BookInfo\">\n          {this.props.read && \"You read this book\"}\n          {this.props.read || (\n            <div>\n              You did not read this book{\" \"}\n              <button className=\"Button\" onClick={this.props.onRead}>\n                Mark as read\n              </button>\n            </div>\n          )}\n        </div>\n        <ExtendedPhotoSwipeGallery\n          items={items}\n          options={options}\n          afterChange={this.afterChange}\n          onClose={this.handleClose}\n        />\n      </div>\n    );\n  }\n}\n\nBook.displayName = \"Book\";\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Loading from \"../components/Loading\";\nimport Book from \"../components/Book\";\nimport { loadPages } from \"../reducers/pages\";\nimport { markRead, isRead } from \"../reducers/read\";\nimport { navigate } from \"../reducers/route\";\nimport { selectBook } from \"../reducers/books\";\n\nclass BookManager extends React.Component {\n  handleRead = () => {\n    this.props.dispatch(markRead(this.props.path));\n  };\n\n  componentDidMount() {\n    if (!this.props.pages.length) {\n      this.props.dispatch(loadPages(this.props.path));\n    }\n\n    this.props.dispatch(\n      navigate(\n        this.props.book.name,\n        this.props.location.pathname,\n        this.props.parent\n      )\n    );\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.book.name !== this.props.book.name) {\n      this.props.dispatch(\n        navigate(\n          nextProps.book.name,\n          nextProps.location.pathname,\n          nextProps.parent\n        )\n      );\n\n      if (!nextProps.pages.length) {\n        this.props.dispatch(loadPages(nextProps.path));\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.unmounting = true;\n  }\n\n  render() {\n    if (!this.props.pages.length) {\n      return <Loading />;\n    }\n\n    return (\n      <div className=\"Content Content--gallery\">\n        <Book\n          pages={this.props.pages}\n          read={this.props.read}\n          onRead={this.handleRead}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  // We need to lower case the login due to the way GitHub's API behaves.\n  // Have a look at ../middleware/api.js for more details.\n  const path =\n    (ownProps.location && ownProps.location.pathname.replace(\"/book/\", \"\")) ||\n    \"\";\n\n  const { book, parent, pages } = selectBook(state, path.replace(/%23/g, \"#\"));\n\n  const read = isRead(state.read.read, path);\n\n  return {\n    path,\n    book,\n    parent,\n    pages,\n    read\n  };\n};\n\nexport default connect(mapStateToProps)(BookManager);\n\nBookManager.displayName = \"BookManager\";\n"],"sourceRoot":""}